{"ast":null,"code":"import { throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CommentService = /*#__PURE__*/(() => {\n  class CommentService {\n    constructor(http) {\n      this.http = http;\n      this.commentsUrl = 'https://jsonplaceholder.typicode.com/comments';\n    }\n\n    getComments(articleId) {\n      return this.http.get(this.commentsUrl).pipe(map(comments => comments.filter(comment => comment.postId === articleId)), catchError(this.handleError));\n    }\n\n    handleError(res) {\n      console.error(res.error || res.body.error);\n      return observableThrowError(res.error || 'Server error');\n    }\n\n  }\n\n  CommentService.ɵfac = function CommentService_Factory(t) {\n    return new (t || CommentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommentService,\n    factory: CommentService.ɵfac,\n    providedIn: 'root'\n  });\n  return CommentService;\n})();","map":null,"metadata":{},"sourceType":"module"}