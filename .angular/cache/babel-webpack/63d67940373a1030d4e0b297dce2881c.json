{"ast":null,"code":"import { throwError as observableThrowError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ArticleService = /*#__PURE__*/(() => {\n  class ArticleService {\n    constructor(http) {\n      this.http = http;\n      this.articlesUrl = 'https://jsonplaceholder.typicode.com/posts';\n    }\n\n    getArticles(userId) {\n      return this.http.get(this.articlesUrl).pipe(map(articles => articles.filter(article => article.userId === userId)), catchError(this.handleError));\n    }\n\n    getArticle(id, articleId) {\n      return this.getArticles(id).pipe(map(articles => articles.find(article => article.id === articleId)));\n    }\n\n    postArticle(article) {\n      const headers = new Headers({\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(this.articlesUrl, article).pipe(catchError(this.handleError));\n    }\n\n    handleError(res) {\n      console.error(res.error || res.body.error);\n      return observableThrowError(res.error || 'Server error');\n    }\n\n  }\n\n  ArticleService.ɵfac = function ArticleService_Factory(t) {\n    return new (t || ArticleService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ArticleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArticleService,\n    factory: ArticleService.ɵfac,\n    providedIn: 'root'\n  });\n  return ArticleService;\n})();","map":null,"metadata":{},"sourceType":"module"}